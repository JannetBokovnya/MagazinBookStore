@model BookStore.Domain.Entities.Book

@{
    ViewBag.Title = "Админ панель: редактирование товаров";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="panel">

    <div class="panel-heading">
        <h3>Редактирование книги "@Model.Name"</h3>
    </div>

    @*веб-браузеры будут корректно загружать файлы, только если в HTML-элементе <form>
                для значения атрибута enctype указано multipart-form-data.
            Другими словами, для успешной загрузки элемент <form>
        Без атрибута enctype браузер будет передавать только имя файла, но не его содержимое
        должен выглядеть следующим образом:*@
    @using (Html.BeginForm("Edit", "Admin",
        FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="panel-body">
            @Html.HiddenFor(m => m.BookId)
            @foreach (var property in ViewData.ModelMetadata.Properties)
            {
                switch (property.PropertyName)
                {
                    case "BookId":
                    case "ImageData":
                    case "ImageMimeType":
                        //ничего не делать
                        break;
                    default:
                        <div class="form-group">
                            <label>@(property.DisplayName ?? property.PropertyName)</label>
                            @if (property.PropertyName == "description")
                            {
                                @Html.TextArea(property.PropertyName, null,
                                    new { @class="form-control", rows=5})
                            }
                            else
                            {
                                @Html.TextBox(property.PropertyName, null,
                                    new { @class="form-control"})
                            }
                            @Html.ValidationMessage(property.PropertyName)
                        </div>
                        break;
                }

            }

            <div class="form-group">
                <div style="position:relative;">
                    <label>Картинка</label>
                    <a class='btn' href='javascript:;'>
                        Выберите файл...
                        <input type="file" name="Image" size="40"
                               style="position:absolute;z-index:2;top:0;
                                left:0;filter: alpha(opacity=0); opacity:0;
                                background-color:transparent;color:transparent;"
                               onchange='$("#upload-file-info").html($(this).val());'>
                    </a>
                    <span class='label label-info' id="upload-file-info"></span>
                </div>
                @if (Model.ImageData == null)
                {
                    <div class="form-control-static">Нет картинки</div>
                }
                else
                {
                    <img class="img-thumbnail" width="150" height="150"
                         src="@Url.Action("GetImage", "Book",
                        new { Model.BookId })" />
                }
            </div>


        </div>
        <div class="panel-footer">
            <input type="submit" value="Сохранить" class="btn btn-primary" />
            @Html.ActionLink("Отмена", "Index", null, new { @class = "btn btn-default" })
            @Html.ActionLink("Домой", "List", "Book", null, new { @class = "btn btn-default" })
           
        </div>
    }


</div>

@*//Вместо написания разметки для каждой метки и поля ввода вручную
    //мы используем вспомагательный метод Html.EditorForModel().
    //Данный метод запрашивает у инфраструктуры MVC Framework создание
    //интерфейса редактирования, и она делает это за счет инспектирования
    //типа модели - класса Book в рассматриваемом случае.
    //Чтобы увидеть страницу, сгенерированную из представления Edit,
    //запустите приложение и перейдите на URL вида /Admin/Index.*@
